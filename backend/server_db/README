# if you can use the Makefile in the current folder it's easier to manage the migration and the starting/stopping of postgres



------How to run the database
# you have to be inside the folder server_db (make start-postgres)

docker run --name postgres \
  -e POSTGRES_PASSWORD=postgres \
  -d \
  -p 5432:5432 \
  -v ./sql_scripts:/docker-entrypoint-initdb.d \
  -v ./data:/var/lib/postgresql/data \
  -v ./migrations:/migrations \
  postgres


------How to use migration

# you have to be inside the folder server_db and have postgres running

# build the docker image about migration (make build-migration)
docker build -t migrate_image .

# create a migration (make create-migration)
docker run --rm \
  --network host \
  -e POSTGRESQL_URL=postgres://postgres:postgres@localhost:5432/studybuds_db?sslmode=disable \
  -v ./migrations:/migrations \
  migrate_image \
  migrate create -ext sql -dir migrations -seq create_test_table_for_example

# fill the migration files inside migrations folder with sql code (an example is inside migration folder)
# In essence, in the up you have to write the changes to the database schema
#             in the down you have to write how to reverse the changes

# run the next migration  (make next-migration)
docker run --rm \
  --network host \
  -e POSTGRESQL_URL=postgres://postgres:postgres@localhost:5432/studybuds_db?sslmode=disable \
  -v ./migrations:/migrations \
  migrate_image \
  migrate -database ${POSTGRESQL_URL} -path migrations up 1

# back to the previous version (make previous-migration)
# If you get an error like "error: file does not exist", it could mean that there are no more previous migration so your current migration is the oldest one
docker run -it --rm \
  --network host \
  -e POSTGRESQL_URL=postgres://postgres:postgres@localhost:5432/studybuds_db?sslmode=disable \
  -v ./migrations:/migrations \
  migrate_image \
  migrate -database ${POSTGRESQL_URL} -path migrations down 1


